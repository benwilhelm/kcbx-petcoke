#!/usr/bin/env node

var cwd = process.cwd();
require(cwd + "/lib/env");

var async = require('async');
var cache = require("memjs").Client.create();
var constants = require(cwd + "/lib/constants");
var moment = require('moment');
var notifications = require(cwd + "/services/notifications");
var qryLat = constants.station_location.lat;
var qryLng = constants.station_location.lng;
var smsSubscribers = require(cwd + "/services/smsSubscriber");
var weather = require(cwd + "/services/weather");
var _ = require('lodash');

weather.getForecast(qryLat, qryLng, function(fcErr, fc) {

  if (fcErr)
    return console.error(fcErr);

  var hazardous = _.find(constants.WIND_STATUS_TERMS, "term", "Hazardous");

  if (process.env.TEST_POLL_SCRIPT === 'true' // envvars are cast to strings
  ||  (fc && fc.currently.wind_speed >= hazardous.threshold)) {

    cache.get("notifications.last_wind_notice_sent", function(cacheErr, lastSent){
      if (cacheErr) { console.error(cacheErr); }

      // Don't send again if sent within threshold defined in constants.js
      if (lastSent) {
        var now = moment();
        var lastSentMoment = moment(lastSent.toString());
        var hoursSinceLast = now.diff(lastSentMoment, 'hours');

        if (hoursSinceLast < constants.notification_rate_limit) {
          cache.close();
          return console.log("Notification already sent at " + lastSentMoment.format());
        }
      }
  
      var message = [
        'Wind Alert!',
        'Avoid petcoke exposure by limiting outdoor activity. ',
        'Learn more and take action at ' + constants.TAKE_ACTION_URL + '.'
      ].join(' ');

      notifications.broadcast(message, function(err){
        if (err) {
          cache.close();
          return console.error(err);
        }
        
        cache.set("notifications.last_wind_notice_sent", moment().format(), function(){
          cache.close();
        })
      });

    })

  }

});
